{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/self-study/learn-redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\n/**\n * STORE\n * \n * Store is a globalized state, holds all data / state for your app\n * \n */\n\n/**\n * ACTION\n * \n * Action describes what you are going to do to\n * \n * Action is a function that returns an object\n */\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT' //name of the action\n\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT' //name of the action\n\n  };\n};\n/**\n * REDUCER\n * \n * Reducer describes how actions transform the current state to the next state\n*/\n\n\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n\n    case \"DECREMENT\":\n      return state - 1;\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counter); //Display it in the console\n\nstore.subscribe(() => console.log(store.getState()));\n/**\n  * DISPATCH\n  * \n  * Dispatch executes the action to the reducer\n*/\n\nstore.dispatch(increment());\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/administrator/self-study/learn-redux/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","increment","type","decrement","counter","state","action","store","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA;;;;;;;AAQA;;;;;;;;AAQA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE,WADD,CACa;;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLD,IAAAA,IAAI,EAAE,WADD,CACa;;AADb,GAAP;AAGD,CAJD;AAMA;;;;;;;AAMA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACrC,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,WAAL;AACE,aAAOG,KAAK,GAAG,CAAf;;AACF,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CATD;;AAWA,MAAME,KAAK,GAAGP,WAAW,CAACI,OAAD,CAAzB,C,CAEA;;AACAG,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB;AAEA;;;;;;AAKAJ,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB;AAEAJ,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\n\n/**\n * STORE\n * \n * Store is a globalized state, holds all data / state for your app\n * \n */\n\n\n/**\n * ACTION\n * \n * Action describes what you are going to do to\n * \n * Action is a function that returns an object\n */\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT' //name of the action\n  }\n}\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT' //name of the action\n  }\n}\n\n/**\n * REDUCER\n * \n * Reducer describes how actions transform the current state to the next state\n*/\n\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(counter);\n\n//Display it in the console\nstore.subscribe(() => console.log(store.getState()));\n\n/**\n  * DISPATCH\n  * \n  * Dispatch executes the action to the reducer\n*/\nstore.dispatch(increment());\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}